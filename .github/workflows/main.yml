# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called build
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: test
    env:
      APP_HOST: ${{ secrets.APP_HOST }}
      APP_PORT: ${{ secrets.APP_PORT }}

      API_VERSION: ${{ secrets.API_VERSION }}

      DATABASE: ${{ secrets.DATABASE }}
      USERNAME_DATABASE: ${{ secrets.USERNAME_DATABASE }}
      PASSWORD_DATABASE: ${{ secrets.PASSWORD_DATABASE }}
      HOST_DATABASE: ${{ secrets.HOST_DATABASE }}
      PORT_DATABASE: ${{ secrets.PORT_DATABASE }}
      DIALECT_DATABASE: ${{ secrets.DIALECT_DATABASE }}

      DATABASE_TEST: ${{ secrets.DATABASE_TEST }}
      USERNAME_DATABASE_TEST: ${{ secrets.USERNAME_DATABASE_TEST }}
      PASSWORD_DATABASE_TEST: ${{ secrets.PASSWORD_DATABASE_TEST }}
      HOST_DATABASE_TEST: ${{ secrets.HOST_DATABASE_TEST }}
      PORT_DATABASE_TEST: ${{ secrets.PORT_DATABASE_TEST }}
      DIALECT_DATABASE_TEST: ${{ secrets.DIALECT_DATABASE_TEST }}

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_DB: ${{ secrets.DATABASE_TEST }}
          POSTGRES_USER: ${{ secrets.USERNAME_DATABASE_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD_DATABASE_TEST }}
          PORT_DATABASE_TEST: ${{ secrets.PORT_DATABASE_TEST }}
        ports:
          - "5432":"5432"

    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Node.js environment     
        uses: actions/setup-node@v3.3.0
        with:
          node-version: ${{ matrix.node-version }}
  
      - run: npm install
      
      - run: npm run test:coverage

      - uses: codecov/codecov-action@v3.1.0
        if: ${{ always() }}
